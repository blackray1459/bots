# My test bot for Telegram

import telebot
import config
import random

from telebot import types

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    parrot = open('stickers/parrot_glasses.tgs', 'rb')
    bot.send_sticker(message.chat.id, parrot)

    #keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_random = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    button_howisit = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞?")
    button_changeletter = types.KeyboardButton("–ü–æ–º–µ–Ω—è—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∫—É")

    markup.row(button_random, button_howisit).add(button_changeletter)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ —Ç–µ—Å—Ç–æ–≤–æ–º –±–æ—Ç–µ, {0.first_name}!\n–¢—É—Ç –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–µ—Å—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è "
                                      "–±–æ—Ç–æ–≤ –≤ –¢–µ–ª–µ–≥—Ä–∞–º.\n–ú–µ–Ω—è –∑–æ–≤—É—Ç <b>{1.first_name}</b>".format(message.from_user,
                                                                                                   bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(commands=['help'])
def help_me(message):
    bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–º–æ—â—å! The bot is under construction...")


@bot.message_handler(commands=['stop'])
def goodbye(message):
    remove_keys = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–ë—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å!", reply_markup=remove_keys)


@bot.message_handler(content_types=['text'])
def chatting(message):
    if message.chat.type == 'private':
        if message.text == '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton("–û—Ç–ª–∏—á–Ω–æ", callback_data='perfect')
            item2 = types.InlineKeyboardButton("–ù–æ—Ä–º–∞–ª—å–Ω–æ", callback_data='good')
            item3 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, "–ü–æ–∫–∞ –Ω–µ —Ä–æ–¥–∏–ª–∞. üòÇ\n–ê —É —Ç–µ–±—è?", reply_markup=markup)
        elif message.text == "–ü–æ–º–µ–Ω—è—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∫—É":
            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–†—É—Å—Å–∫–∏–π -> –ê–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data='to_english')
            item2 = types.InlineKeyboardButton("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π -> –†—É—Å—Å–∫–∏–π", callback_data='to_russian')
            markup.add(item1).add(item2)

            bot.send_message(message.chat.id, "–ö–∞–∫ –º–Ω–µ –ø–æ–º–µ–Ω—è—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∫—É?", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ –∑–Ω–∞—é —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å. The bot is under construction...")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)
            if call.data == 'perfect':
                bot.send_message(call.message.chat.id, "–ò —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ!")
            elif call.data == 'good':
                bot.send_message(call.message.chat.id, "–ê –±—É–¥–µ—Ç —Å—É–ø–µ—Ä!")
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, "–ù—É —á—Ç–æ –∂ —Ç–∞–∫–æ–µ üò©")
            elif call.data == 'to_english':
                bot.send_message(call.message.chat.id, "–°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç —Å–º–µ–Ω–∞ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –° –†–£–°–°–ö–û–ì–û –ù–ê –ê–ù–ì–õ–ò–ô–°–ö–ò–ô")
            elif call.data == 'to_russian':
                bot.send_message(call.message.chat.id, "–°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç —Å–º–µ–Ω–∞ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –° –ê–ù–ì–õ–ò–ô–°–ö–û–ì–û –ù–ê –†–£–°–°–ö–ò–ô")
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!")
    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
